<Project DefaultTargets="Info" ToolsVersion="Current" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="process.tasks"/>

	<PropertyGroup>
		<ReferenceVer>v4.7</ReferenceVer>
		<DockerServiceName>com.docker.service</DockerServiceName>
		<DockerDesktop>"$(ProgramW6432)\Docker\Docker\Docker Desktop.exe"</DockerDesktop>
		<TimeoutSeconds>60</TimeoutSeconds>
	</PropertyGroup>

	<PropertyGroup>
		<ReferenceDir>$(MSBuildProgramFiles32)\Reference Assemblies\Microsoft\Framework\.NETFramework\$(ReferenceVer)</ReferenceDir>
		<Elevate>powershell -command Start-Process -verb runas -filePath sc.exe -wait -argumentList</Elevate>
	</PropertyGroup>

	<Target Name="StartDockerService">
		<ServiceStatus Name="$(DockerServiceName)">
			<Output TaskParameter="Status" PropertyName="Status"/>
		</ServiceStatus>
		<Message Text="Status $(Status)"/>
		<Exec Condition="$(Status)=='Stopped'" Command="$(Elevate) 'start $(DockerServiceName)'"/>
		<WaitForState Name="$(DockerServiceName)" State="Running" TimeoutSeconds="$(TimeoutSeconds)"/>
	</Target>

	<Target Name="StartDockerExe">
		<!-- idempotent-->
		<StartExecutable Name="$(DockerDesktop)"/>

		<WaitForSuccess Name="docker" Args="ps" WaitSeconds="5" TimeoutSeconds="$(TimeoutSeconds)">
			<Output TaskParameter="Result" PropertyName="Status"/>
		</WaitForSuccess>
		<Error Text="Timeout waiting for docker command" Condition="'$(Status)'!='True'"/>
	</Target>

	<Target Name="StartDocker" DependsOnTargets="StartDockerService;StartDockerExe"/>

	<Target Name="Info" DependsOnTargets="StartDocker">
		<Exec Command="docker --version"/>
		<Exec Command="docker image ls"/>
	</Target>

	<Target Name="StopDocker">
		<Kill Name="Docker Desktop"/>

		<ServiceStatus Name="$(DockerServiceName)">
			<Output TaskParameter="Status" PropertyName="Status"/>
		</ServiceStatus>
		<Message Text="Status $(Status)"/>
		<Exec Condition="$(Status)!='Stopped'" Command="$(Elevate) 'stop $(DockerServiceName)'"/>
		<WaitForState Name="$(DockerServiceName)" State="Stopped" TimeoutSeconds="$(TimeoutSeconds)"/>

		<Kill Name="docker"/>
	</Target>

	<Target Name="SetManual">
		<ServiceStatus Name="$(DockerServiceName)">
			<Output TaskParameter="StartType" PropertyName="StartType"/>
		</ServiceStatus>
		<Exec Condition="$(StartType)!='Manual'" Command="$(Elevate) 'config $(DockerServiceName) start= demand'"/>
	</Target>

	<Target Name="Purge">
		<Exec Command="docker ps --quiet"/>
		<Exec Command="docker system prune --all --force"/>
		<Exec Command="docker images -f dangling=true"/>
		<Exec Command="docker image ls --all"/>
		<Exec Command="docker ps --all"/>
	</Target>
</Project>