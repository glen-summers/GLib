<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="Current">
	<Import Project="Default.props"/>
	<ItemGroup>
		<TidyInclude Include="$(Source)\include"/>
		<TidyInclude Include="$(Boost)"/>

		<TidyIgnoreWarning Include="no-pragma-once-outside-header"/>

		<TidyFlags Condition="'$(Fix)'=='true'" Include="-fix"/>
		<TidyFlags Include="--quiet"/>
		<Defs Include="_UNICODE;UNICODE;$(Defines)"/>
	</ItemGroup>

	<Target Name="FindTidy">
		<PropertyGroup>
			<TidySig>VC\Tools\Llvm\x64\bin\clang-tidy.exe</TidySig>
			<TidyFound>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildBinPath), $(TidySig)))</TidyFound>
			<Tidy>$(TidyFound)\$(TidySig)</Tidy>

			<TidyCmd>@(TidyFlags, ' ') -- -I@(TidyInclude, ' -I') -std=c++20 -D@(Defs,' -D') -x c++ -W@(TidyIgnoreWarning, ' -W')</TidyCmd>
		</PropertyGroup>

		<Message Text="TidyCmd = $(TidyCmd)"/>
		<Error Text="Clang Tidy not found" Condition="'$(TidyFound)' == ''"/>
	</Target>

	<Target Name="Tidy" DependsOnTargets="FindTidy">
		<ItemGroup>
			<FileToCheck Include="$(Source)/GLib/**/*.cpp"/>
			<FileToCheck Include="$(Source)/Coverage/**/*.cpp"/>
			<FileToCheck Include="$(Source)/TestApp/**/*.cpp" Exclude="$(Source)/TestApp/resource.h"/>

			<Relative Include="$([MSBuild]::MakeRelative($(Source), %(FileToCheck.FullPath)))"/>
		</ItemGroup>

		<!-- run one file at a time to avoid duplicate fixes applied to headers -->
		<Exec Command='"$(Tidy)" %(Relative.Identity) $(TidyCmd)' WorkingDirectory="$(Source)"/>
	</Target>

	<Target Name="TidyTests" DependsOnTargets="FindTidy"> <!-- check -->
		<ItemGroup>
			<FileToCheck Include="$(Source)/Tests/**/*.cpp"/>
			<!--FileToCheck Include="$(Source)/Tests/**/*.h"/-->
			<Relative Include="$([MSBuild]::MakeRelative($(Source), %(FileToCheck.FullPath)))"/>
		</ItemGroup>

		<!-- vvslow, split and run in parallel? or add compilation database json? -->
		<Exec Command='"$(Tidy)" %(Relative.Identity) $(TidyCmd)' WorkingDirectory="$(Source)"/>
	</Target>
</Project>