<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="14.0">
	<PropertyGroup>
		<Root>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)\..'))</Root>
	</PropertyGroup>

	<PropertyGroup>
		<Solution>$(Root)\msvc\GLib.sln</Solution>
		<Source>$(Root)</Source>
		<MajorVersion>1</MajorVersion>
		<MinorVersion>0</MinorVersion>
		<FileBuildNumber>0</FileBuildNumber>
		<Configuration>Release</Configuration>
		<Platform>x64</Platform>
		<BuildInParallel>true</BuildInParallel>
		<TestProject>Tests</TestProject>
	</PropertyGroup>

	<PropertyGroup>
		<Out>$(Root)\out</Out>
		<PlatformOut>$(Out)\$(Platform)</PlatformOut>
		<Temp>$(PlatformOut)\temp</Temp>
		<OutputPath>$(PlatformOut)\$(Configuration)</OutputPath>
		<TestExecutable>$(OutputPath)\$(TestProject).exe</TestExecutable>
	</PropertyGroup>

	<Target Name="MakeTempDir">
		<MakeDir Directories="$(Temp)"/>
	</Target>

	<Target Name="Clean">
		<ItemGroup>
			<FileToDelete Include="$(Out)/**/*"/>
			<FileToDelete Include="$(Source)/**/Debug/**/*"/>
			<FileToDelete Include="$(Source)/**/Release/**/*"/>
			<FileToDelete Include="$(Source)/**/ipch/**/*"/>
			<FileToDelete Include="$(Source)/lib/*"/>
		</ItemGroup>
		<Delete Files="@(FileToDelete)" ContinueOnError="WarnAndContinue"/>

		<ItemGroup>
			<Directories Include="$([System.IO.Directory]::GetDirectories('$(Source)', '*', System.IO.SearchOption.AllDirectories))" />
			<Directories>
				<Files>$([System.IO.Directory]::GetFiles("%(Directories.Identity)", "*", System.IO.SearchOption.AllDirectories).get_Length())</Files>
			</Directories>
		</ItemGroup>        
		<RemoveDir Directories="@(Directories)" Condition="%(Files)=='0'" />
	</Target>

	<Target Name="Restore"/>

	<Target Name="Compile" DependsOnTargets="Restore">
		<ItemGroup>
			<Properties Remove="@(Properties)"/>
			<Properties Include="Configuration=$(Configuration)"/>
			<Properties Include="OutDir=$(OutputPath)\"/>
			<Properties Include="Platform=$(Platform)"/>
			<Properties Include="@(CustomProperties)"/>
		</ItemGroup>
		<MSBuild Projects="$(Solution)" Properties="@(Properties)" BuildInParallel="$(BuildInParallel)"/>
	</Target>
	
	<!--32bit...
	<Target Name="CompileX86">
		<MSBuild Condition="'$(Platform)'!='x86'" Projects="$(MSBuildProjectFile)" Targets="Compile" Properties="Platform=x86"/>
	</Target>-->

	<Target Name="Test" DependsOnTargets="Compile">
		<Exec command="$(TestExecutable)"/>
	</Target>

	<Target Name="Build" DependsOnTargets="Compile;Test"/>

	<!--cmake-->
	<PropertyGroup>
		<CMakeRootDir>$(vsInstallationPath)\Common7\IDE\CommonExtensions\Microsoft\CMake</CMakeRootDir>
		<CMake>"$(CMakeRootDir)\CMake\bin\cmake.exe"</CMake>
		<CTest>"$(CMakeRootDir)\CMake\bin\ctest.exe"</CTest>
		<Ninja>"$(CMakeRootDir)\Ninja\ninja.exe"</Ninja>

		<CMakeBuildDir>$(Out)\cmake\build\$(Platform)-$(Configuration)</CMakeBuildDir>
		<CMakeInstallDir>$(Out)\cmake\install\$(Platform)-$(Configuration)</CMakeInstallDir>
	</PropertyGroup>

	<Target Name="CMake">
		<MakeDir Directories="$(CMakeBuildDir)"/>
		<Exec Command='$(CMake) -G "Ninja" -DCMAKE_INSTALL_PREFIX:PATH="$(CMakeInstallDir)" -DCMAKE_BUILD_TYPE="$(Configuration)" -DCMAKE_MAKE_PROGRAM=$(Ninja) $(Root)'
			WorkingDirectory="$(CMakeBuildDir)"/>
		<Exec Command="$(CMake) --build $(CMakeBuildDir) --config $(Configuration) -- -v"/>
		<!-- <Exec Command="set CTEST_OUTPUT_ON_FAILURE=1 &amp;&amp; $(CMake) - -build $(CMakeBuildDir) - -config $(Configuration) - -target test"/> -->
		<Exec Command="set CTEST_OUTPUT_ON_FAILURE=1 &amp;&amp; $(CTest) -VV" WorkingDirectory="$(CMakeBuildDir)"/>
		<Exec Command="$(CMake) --build $(CMakeBuildDir) --config $(Configuration) --target install"/>
	</Target>

	<Target Name="Clone">
		<!-- needs sysnative, msbuild running as 32bit?-->
		<Exec Command="%windir%\sysnative\wsl.exe ./go.sh clone" WorkingDirectory="$(Root)"/>
	</Target>

	<Target Name="All" DependsOnTargets="Build;CMake;Clone"/>
</Project>
